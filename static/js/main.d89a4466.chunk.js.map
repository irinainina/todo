{"version":3,"sources":["components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onTermChange","e","props","onSearchChange","setState","target","value","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onLabelClick","onButtonImportantClick","classNames","important","onClick","TodoList","todos","onDeletedApp","onLabelClickApp","onButtonImportantClickApp","elements","map","item","key","id","ItemStatusFilter","buttonsArr","name","filter","onFilterChange","buttons","ItemAddForm","onLabelChange","event","onSubmit","preventDefault","addItemApp","App","maxId","todoData","createItem","deleteItem","addItem","text","newItem","toggleItem","arr","propName","idx","findIndex","el","oldItem","slice","doneItem","importantItem","items","str","length","toLowerCase","indexOf","visibleItem","filterItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d89a4466.chunk.js","sourcesContent":["import React from 'react';\nimport './AppHeader.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React, {Component} from 'react';\n\nimport './SearchPanel.css';\n\nexport default  class SearchPanel extends Component {\n  \n  state = {\n    term: ''\n  }\n  \n  onTermChange = (e) => {\n    const {onSearchChange = () => {}} = this.props;\n    this.setState({\n      term: e.target.value\n    });\n\n    onSearchChange(e.target.value);\n  };\n  \n  render() {\n    return (\n      <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\" \n                value={this.state.term}\n                onChange={this.onTermChange}/>\n    );\n  }\n};","import React, { Component } from 'react';\n\nimport './TodoListItem.css';\n\nexport default class TodoListItem extends Component {\n\n  render() {\n    const { label, onDeleted, onLabelClick, onButtonImportantClick, important, done} = this.props;\n    \n    let classNames = 'todo-list-item';    \n\n    if (important) {\n      classNames += ' important';\n    }\n    \n    if (done) {\n      classNames += ' done';\n    }\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onLabelClick}>\n          {label}\n        </span>\n\n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onButtonImportantClick}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n\n","import React from 'react';\n\nimport TodoListItem from '../TodoListItem/TodoListItem';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, onDeletedApp, onLabelClickApp, onButtonImportantClickApp }) => {\n\n  const elements = todos.map(item => {\n    return (\n      <li key={item.id} className=\"list-group-item\">\n        <TodoListItem \n        label={item.label} \n        done={item.done}\n        important={item.important} \n        onDeleted={() => onDeletedApp(item.id)}\n        onLabelClick={() => onLabelClickApp(item.id)}\n        onButtonImportantClick={() => onButtonImportantClickApp(item.id)}/>\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\n\nimport './ItemStatusFilter.css';\n\n\nexport default class ItemStatusFilter extends Component {\n  \n  buttonsArr = [\n    {name: 'all', label: 'All'},\n    {name: 'active', label: 'Active'},\n    {name: 'done', label: 'Done'}\n  ]\n     \n  render() {\n    const {filter, onFilterChange} = this.props;\n    \n    const buttons = this.buttonsArr.map(({name, label}) => {\n      const isActive = filter === name;\n      const classNames = isActive ? 'btn btn-info': 'btn btn-outline-secondary';\n      return (\n        <button type=\"button\"\n                className={classNames}\n                key={name}\n                onClick={() => onFilterChange(name)}>\n                  {label}\n        </button>\n      )\n    })\n    \n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\r\nimport './ItemAddForm.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n  \r\n  state = {\r\n    label: ''\r\n  }\r\n  \r\n  onLabelChange = (event) => {\r\n    this.setState({\r\n      label: event.target.value\r\n    })\r\n  }\r\n  \r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.addItemApp(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n        <input type=\"text\"\r\n               className=\"form-control\"\r\n               placeholder=\"What need to be done?\"\r\n               onChange={this.onLabelChange}\r\n               value={this.state.label}/>\r\n        <button className=\"btn btn-outline-secondary\">\r\n          AddItem\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\n\nimport AppHeader from '../AppHeader/AppHeader';\nimport SearchPanel from '../SearchPanel/SearchPanel';\nimport TodoList from '../TodoList/TodoList';\nimport ItemStatusFilter from '../ItemStatusFilter/ItemStatusFilter';\nimport ItemAddForm from '../ItemAddForm/ItemAddForm';\n\nimport './App.css';\n\nexport default class App extends Component {\n  \n  maxId = 100;\n   \n  state = {\n    todoData: [\n      this.createItem('Drink Coffee'),\n      this.createItem('Make Awesome App'),\n      this.createItem('Have a lunch')      \n    ],\n    term: '',\n    filter: 'all' // all, active, done\n  }\n  \n  createItem(label) {\n    return { \n      label, \n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n  \n  deleteItem = (id) => {\n    this.setState(({todoData}) => {\n      return {\n        todoData: todoData.filter(item => item.id !== id)\n      };\n    });\n  };\n  \n  addItem = (text) => {\n    const newItem = this.createItem(text)\n    this.setState(({todoData}) => {\n      return {\n        todoData: [...todoData, newItem]\n      };\n    });\n  }\n  \n  toggleItem = (arr, id, propName) => {\n    const idx = arr.findIndex(el => el.id === id);\n      const oldItem = arr[idx];\n      const newItem = {...oldItem, [propName]: !oldItem[propName]};\n      return [\n        ...arr.slice(0, idx), \n        newItem,\n        ...arr.slice(idx + 1)\n      ]\n  };\n  \n  doneItem = (id) => {\n    this.setState(({todoData}) => {\n      return {\n        todoData: this.toggleItem(todoData, id, 'done')\n      }\n    });\n  };\n  \n  importantItem = (id) => {\n    this.setState(({todoData}) => {      \n      return {\n        todoData: this.toggleItem(todoData, id, 'important')\n      };\n    });\n  };\n  \n  onSearchChange = (term) => {\n    this.setState({ term })\n  }\n  \n  onFilterChange = (filter) => {\n    this.setState({ filter })\n  }\n  \n  search(items, str) {\n    if(str.length === 0) {\n      return items;\n    }\n    return items.filter(item => {\n       return item.label\n         .toLowerCase()\n         .indexOf(str.toLowerCase()) > -1;\n    })\n  }\n  \n  filterItems(items, filter) {\n    if(filter === 'all') {\n      return items\n    } else if (filter === 'active') {\n      return items.filter(item => !item.done)\n    } else if (filter === 'done') {\n      return items.filter(item => item.done)\n    }\n  }\n  \n  render() {\n    const {todoData, term, filter} = this.state;\n    \n    const visibleItem = this.filterItems(this.search(todoData, term), filter);\n    \n    const doneCount = this.state.todoData.filter(el => el.done === true).length;\n    \n    const todoCount = this.state.todoData.length - doneCount;\n    \n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onSearchChange={this.onSearchChange}/>\n          <ItemStatusFilter filter={filter}\n                             onFilterChange={this.onFilterChange}/>\n        </div>\n\n        <TodoList todos={visibleItem} \n                  onDeletedApp={this.deleteItem}\n                  onLabelClickApp={this.doneItem}\n                  onButtonImportantClickApp={this.importantItem}/>\n        <ItemAddForm addItemApp={ this.addItem }/>\n      </div>\n    );\n  }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}